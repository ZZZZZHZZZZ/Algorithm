#include <iostream>>
#include <vector>
using namespace std;

vector<int> sortArray(vector<int>& nums);
void sorttest(vector<int>& nums, int left, int right, vector<int> c);
void merge(vector<int>& nums, int left, int mid, int right, vector<int> c);


vector<int> sortArray(vector<int>& nums) {
	vector<int> c;
	sorttest(nums, 0, nums.size() - 1, c);
	return nums;
}
void sorttest(vector<int> &nums, int left, int right, vector<int> c) {
	if (left < right) {
		int mid = (left + right) / 2;
		sorttest(nums, left, mid, c);
		sorttest(nums, mid + 1, right, c);
		merge(nums, left, mid, right, c);
	}
}
void merge(vector<int> &nums, int left,int mid,int right, vector<int> c) {
	int i = left, j = mid + 1;
	while (i <= mid && j <= right) {
		if (nums[i] < nums[j]) {
			c.push_back(nums[i]);
			i++;
		}
		else {
			c.push_back(nums[j]);
			j++;
		}
	}
	while (i <= mid) {
		c.push_back(nums[i]);
		i++;
	}
	while (j <= right) {
		c.push_back(nums[j]);
		j++;
	}
	int k = 0;
	while (left <= right) {
		nums[left] = c[k];
		left++; k++;
	}
}


int main()
{
	vector<int>nums;
	for (int i = 10; i > 0; i--) {
		nums.push_back(i);
	}
	vector<int>test = sortArray(nums);
	for (int i = 0; i < 10; i++) {
		cout << test[i] << " ";
	}
}
