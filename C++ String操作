char转int:
  int a=char-'0';
初始化：
  string.assign(str="str"); //清空字符串，并设置为"str"
  string.assign(str="str",2); //清空字符串，并设置为"st"，保留两个字符
  string.reasize(10,char c); //设置当前 str 的大小为10，若大小大与当前串的长度，字0符c 来填充
容量:
  string.size()==string.length();
寻找:
  size_type/unsigned int find(str="str",pos=0); //函数从位置pos开始搜索,返回str所在的位置，如果没有找到则返回string::npos(-1)
  size_type/unsigned int find_first_of(str="str"); //函数返回string中第一次出现属于str中字符的位置
  size_type/unsigned int find_last_of(str="str"); //函数返回string中最后一次出现属于str中字符的位置置
  size_type/unsigned int find_first_not_of(str="str"); //函数返回string中第一次出现不属于str中字符的位置
  size_type/unsigned int find_last_not_of(str="str"); //函数返回string中最后一次出现不属于str中字符的位置
  size_type/unsigned int rfind(str="str",pos=0) //从pos开始反向查找str所在的位置
插入:
  string.insert(pos=0,str="str"); //函数在pos位置插入字符串str;
  string.push_back(char='str'); //函数在尾部插入字符str;
  stirng.append(str="str"); //函数在尾部插入字符串str;
删除:
  string.erase(iterator first, iterator last); //删除字符串中迭代器区间[first,last)上所有字符
  string.erase(pos = 0,len = npos); //删除从pos开始，长度为len的字符串
替换:
  string.swap(string str); //交换str与string中的内容
排序:
  sort(iterator first, iterator last); //将first到last-1的位置上的元素进行排序
 
